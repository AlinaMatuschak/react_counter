{"version":3,"sources":["components/Counter/Counter.js","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","type","onClick","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACrB,iCACE,6CAAeH,IAEf,4BAAQI,KAAK,SAASC,QAASJ,GAA/B,WAEA,4BAAQG,KAAK,SAASC,QAASH,GAA/B,WAEA,4BAAQE,KAAK,SAASC,QAASF,GAA/B,eCqCWG,E,4MA3CbC,MAAQ,CACNP,MAAO,G,EAGTC,OAAS,WACP,EAAKO,UAAS,kBAAgB,CAC5BR,MADY,EAAGA,MACA,O,EAInBE,OAAS,WACP,EAAKM,UAAS,kBAAgB,CAC5BR,MADY,EAAGA,MACA,S,EAInBG,SAAW,WACL,EAAKI,MAAMP,MAAQ,IAAM,GAC3B,EAAKE,SAGP,EAAKD,U,uDAGG,IAEGD,EAIPS,KAJFF,MAASP,MACTC,EAGEQ,KAHFR,OACAC,EAEEO,KAFFP,OACAC,EACEM,KADFN,SAGF,OACE,kBAAC,EAAD,CACEH,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRC,SAAUA,Q,GAtCAO,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.020f43cb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({ count, addOne, add100, increase }) => (\n  <section>\n    <h1>{`Count: ${count}`}</h1>\n\n    <button type=\"button\" onClick={addOne}>Add one</button>\n\n    <button type=\"button\" onClick={add100}>Add 100</button>\n\n    <button type=\"button\" onClick={increase}>Increase</button>\n  </section>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(({ count }) => ({\n      count: count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(({ count }) => ({\n      count: count + 100,\n    }));\n  };\n\n  increase = () => {\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    const {\n      state: { count },\n      addOne,\n      add100,\n      increase,\n    } = this;\n\n    return (\n      <Counter\n        count={count}\n        addOne={addOne}\n        add100={add100}\n        increase={increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}